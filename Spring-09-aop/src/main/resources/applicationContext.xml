<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--   注册bean-->
       <bean id="userService" class="com.mf.service.UserServiceImpl"/>
       <bean id="afterLog" class="com.mf.log.AfterLog"/>
       <bean id="log" class="com.mf.log.Log"/>

<!--    方式三：使用注解定义切面-->
        <bean id="annotationPointCut" class="com.mf.diy.AnnotationPointCut"/>
<!--    开启注解支持-->
        <aop:aspectj-autoproxy/>

<!--    方式一：使用原生的Spring API接口-->
<!--配置AOP:需要导入AOP的约束配置-->
<!--       <aop:config>-->
<!--     首先需要一个切入点   表达式execution(要执行的位置* * * * *)-->
<!--          <aop:pointcut id="pointcut" expression="execution(* com.mf.service.UserServiceImpl.*(..) )"/>-->
<!--      执行环绕增强-->
<!--           <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--           <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->

<!--       </aop:config>-->


<!--        方式二：使用自定义类-->
<!--          <bean id="diyPointCut" class="com.mf.diy.DiyPointCut"/>-->
<!--          <aop:config>-->
<!--&lt;!&ndash;           自定义切面，ref要引用的类&ndash;&gt;-->
<!--              <aop:aspect ref="diyPointCut">-->
<!--&lt;!&ndash;              切入点&ndash;&gt;-->
<!--                  <aop:pointcut id="point" expression="execution(* com.mf.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;              通知&ndash;&gt;-->
<!--                  <aop:after method="after" pointcut-ref="point"/>-->
<!--                  <aop:before method="before" pointcut-ref="point"/>-->
<!--              </aop:aspect>-->
<!--          </aop:config>-->
</beans>